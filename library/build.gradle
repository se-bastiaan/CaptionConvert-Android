buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:1.3.0'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.0'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.3'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

def groupId = 'com.github.sv244'
def artifactId = 'captionconvert-android'
def version = '1.0.1'
def localReleaseDest = "${buildDir}/release/${version}"

apply plugin: 'com.android.library'
apply plugin: 'maven'
apply plugin: 'signing'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.0"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 1
        versionName '1.0.0'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
}

task androidJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    classifier = 'javadoc'
    from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

artifacts {
    archives androidSourcesJar
    archives androidJavadocsJar
}

signing {
    sign configurations.archives
}

uploadArchives {
    repositories.mavenDeployer {
        beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
        pom.groupId = groupId
        pom.artifactId = artifactId
        pom.version = version
        pom.project {
            name 'CaptionConvert-Android'
            packaging 'aar'
            description 'Caption convert library for Android'
            url 'https://github.com/sv244/CaptionConvert-Android'

            scm {
                url 'https://github.com/sv244/CaptionConvert-Android'
                connection 'scm:git@github.com:sv244/CaptionConvert-Android.git'
                developerConnection 'scm:git@github.com:sv244/CaptionConvert-Android.git'
            }

            licenses {
                license {
                    name 'GNU General Public License, Version 3.0'
                    url 'www.gnu.org/licenses/gpl-3.0.html'
                }
            }

            developers {
                developer {
                    id 'sv244'
                    name 'sv244'
                    email 'sv244@its.pt'
                }
            }
        }

        repository(url: "file://${localReleaseDest}")
    }
}

task zipRelease(type: Zip) {
    from localReleaseDest
    destinationDir buildDir
    archiveName "release-${version}.zip"
}

task generateRelease << {
    println "Release ${version} can be found at ${localReleaseDest}/"
    println "Release ${version} zipped can be found ${buildDir}/release-${version}.zip"
}

generateRelease.dependsOn(uploadArchives)
generateRelease.dependsOn(zipRelease)